<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gRmDTwAAAABJRU5ErkJggg==
</value>
  </data>
</root>